[manifest]
version = "1.0.0"
priority = 0

# fixes tarot pools for emperors
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''elseif v.set == 'Planet' then
                    if (not v.config.softlock or G.GAME.hands[v.config.hand_type].played > 0) then
                        add = true
                    end'''
position = "after"
payload = '''
elseif v.set == 'Tarot' and (_append == 'emp'or _append == 'remp' or _append == 'car' or _append == 'rcar' or _append == 'vag' or _append == 'rvag') then
    if ((_append == 'emp' or _append == 'car' or _append == 'vag') and v.order <= 22 or (_append == 'remp' or _append == 'rcar' or _append == 'rvag') and v.order > 22) then
	    add = true
        --print(v.name .. " " .. _append .. " " .. v.order)
    end
'''
match_indent = true
times = 1

# fixes sell value of ephemeral sticker
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.area and self.ability.couponed and (self.area == G.shop_jokers or self.area == G.shop_booster) then self.cost = 0 end'''
position = "after"
payload = '''
if self.ability['reverse_ephemeral'] then
    self.sell_cost = 0
end
'''
match_indent = true
times = 1


# fixes Card:is_suit() for secondary suit cards
# SEPARATE OUT INTO ITS OWN UNIQUE FUNCTION, THEN INSERT IT INTO Card:is_suit()
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''return self.base.suit == suit'''
position = "before"
payload = '''
if self:is_secondary_suit(suit) then
    return true
end
'''
match_indent = true
times = 2


# adds Card:is_secondary_suit(),  for secondary suit card calculations
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:is_suit(suit, bypass_debuff, flush_calc)'''
position = "before"
payload = '''
function Card:is_secondary_suit(suit)
    local words = {}
    for w in self.ability.name:gmatch("([^_]+)") do
        table.insert(words, w) 
    end
    if words[3] == 'secondary' and not self.debuff then
        local new_suit = words[4]:gsub("^%l", string.upper) .. 's'
        if next(find_joker('Smeared Joker')) and (new_suit == 'Hearts' or new_suit == 'Diamonds') == (suit == 'Hearts' or suit == 'Diamonds') then
            return true
        else
            return new_suit == suit
        end
    end
    return false
end

function Card:has_secondary_suit()
    local words = {}
    for w in self.ability.name:gmatch("([^_]+)") do
        table.insert(words, w) 
    end
    if words[3] == 'secondary' and not self.debuff then
        return true
    end
    return false
end

'''
match_indent = true
times = 1


# fixes Flower Pot and Seeing Double
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if not SMODS.has_any_suit(context.scoring_hand[i]) then'''
position = "at"
payload = '''if not SMODS.has_any_suit(context.scoring_hand[i]) and not context.scoring_hand[i]:has_secondary_suit() then'''
match_indent = true
times = 2

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''elseif context.scoring_hand[i]:is_suit('Clubs') and suits["Clubs"] == 0  then suits["Clubs"] = suits["Clubs"] + 1 end
                                end'''
position = "after"
payload = '''
if context.scoring_hand[i]:has_secondary_suit() then
    if context.scoring_hand[i]:is_suit('Hearts') and suits["Hearts"] == 0 then suits["Hearts"] = suits["Hearts"] + 1 end
    if context.scoring_hand[i]:is_suit('Diamonds') and suits["Diamonds"] == 0  then suits["Diamonds"] = suits["Diamonds"] + 1 end
    if context.scoring_hand[i]:is_suit('Spades') and suits["Spades"] == 0  then suits["Spades"] = suits["Spades"] + 1 end
    if context.scoring_hand[i]:is_suit('Clubs') and suits["Clubs"] == 0  then suits["Clubs"] = suits["Clubs"] + 1 end
end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''elseif context.scoring_hand[i]:is_suit('Hearts') and suits["Hearts"] == 0  then suits["Hearts"] = suits["Hearts"] + 1 end
                                end'''
position = "after"
payload = '''
if context.scoring_hand[i]:has_secondary_suit() then
    if context.scoring_hand[i]:is_suit('Hearts') and suits["Hearts"] == 0 then suits["Hearts"] = suits["Hearts"] + 1 end
    if context.scoring_hand[i]:is_suit('Diamonds') and suits["Diamonds"] == 0  then suits["Diamonds"] = suits["Diamonds"] + 1 end
    if context.scoring_hand[i]:is_suit('Spades') and suits["Spades"] == 0  then suits["Spades"] = suits["Spades"] + 1 end
    if context.scoring_hand[i]:is_suit('Clubs') and suits["Clubs"] == 0  then suits["Clubs"] = suits["Clubs"] + 1 end
end
'''
match_indent = true
times = 1


# Patching the get_poker_hand_info
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''local poker_hands = evaluate_poker_hand(_cards)'''
position = "at"
payload = '''local poker_hands = evaluate_poker_hand_wrapper(_cards)
print("testing")'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''local eval = evaluate_poker_hand(args.cards)'''
position = "at"
payload = '''local eval = evaluate_poker_hand_wrapper(args.cards)'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = '''local poker_hands = evaluate_poker_hand(_cards)'''
position = "at"
payload = '''local poker_hands = evaluate_poker_hand_wrapper(_cards)'''
match_indent = true
times = 1

# Removing the SMODS get_straight() so that the base game one gets called
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/overrides.lua"]'
pattern = '''function get_straight(hand)'''
position = "at"
payload = '''function defunct_straight(hand)'''
match_indent = true
times = 1

#---------------------------------------------------------

# Patching the Jokers...
# 8 Ball
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if (context.other_card:get_id() == 8) and (pseudorandom('8ball') < G.GAME.probabilities.normal/self.ability.extra) then'''
position = "at"
payload = '''if is_rank(context.other_card, {8}) and (pseudorandom('8ball') < G.GAME.probabilities.normal/self.ability.extra) then'''
match_indent = true
times = 1

# Raised Fist
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if temp_ID >= G.hand.cards[i].base.id and not SMODS.has_no_rank(G.hand.cards[i]) then'''
position = "at"
payload = '''if temp_ID >= G.hand.cards[i].base.id and not SMODS.has_no_rank(G.hand.cards[i]) and not is_omnirank(G.hand.cards[i]) then'''
match_indent = true
times = 1

# Fibonacci
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Fibonacci' and (
                context.other_card:get_id() == 2 or 
                context.other_card:get_id() == 3 or 
                context.other_card:get_id() == 5 or 
                context.other_card:get_id() == 8 or 
                context.other_card:get_id() == 14) then'''
position = "at"
payload = '''if self.ability.name == 'Fibonacci' and is_rank(context.other_card, {2, 3, 5, 8, 14}) then'''
match_indent = true
times = 1

# is_face() (Affects Scary Face, Ride the Bus, Smiley Face, Photograph, Faceless Joker, Midas Mask, Business Card, Reserved Parking, Canio)
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''function Card:is_face(from_boss)
    if self.debuff and not from_boss then return end'''
position = "after"
payload = '''if is_omnirank(self) then return true end'''
match_indent = true
times = 1

# Hack
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Hack' and (
                context.other_card:get_id() == 2 or 
                context.other_card:get_id() == 3 or 
                context.other_card:get_id() == 4 or 
                context.other_card:get_id() == 5) then'''
position = "at"
payload = '''if self.ability.name == 'Hack' and is_rank(context.other_card, {2, 3, 4, 5}) then'''
match_indent = true
times = 1

# Even Steven
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Even Steven' and
                context.other_card:get_id() <= 10 and 
                context.other_card:get_id() >= 0 and
                context.other_card:get_id()%2 == 0
                then'''
position = "at"
payload = '''if self.ability.name == 'Even Steven' and is_rank(context.other_card, {2, 4, 6, 8, 10}) then'''
match_indent = true
times = 1

# Odd Todd
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Odd Todd' and
                ((context.other_card:get_id() <= 10 and 
                context.other_card:get_id() >= 0 and
                context.other_card:get_id()%2 == 1) or
                (context.other_card:get_id() == 14))
                then'''
position = "at"
payload = '''if self.ability.name == 'Odd Todd' and is_rank(context.other_card, {3, 5, 6, 9, 14}) then'''
match_indent = true
times = 1

# Scholar
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Scholar' and
                    context.other_card:get_id() == 14 then'''
position = "at"
payload = '''if self.ability.name == 'Scholar' and is_rank(context.other_card, {14}) then'''
match_indent = true
times = 1


# Sixth Sense
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Sixth Sense' and #context.full_hand == 1 and context.full_hand[1]:get_id() == 6 and G.GAME.current_round.hands_played == 0 then'''
position = "at"
payload = '''if self.ability.name == 'Sixth Sense' and #context.full_hand == 1 and is_rank(context.full_hand[1], {6}) and G.GAME.current_round.hands_played == 0 then'''
match_indent = true
times = 1

# Superposition
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if context.scoring_hand[i]:get_id() == 14 then aces = aces + 1 end'''
position = "at"
payload = '''if is_rank(context.scoring_hand[i], {14}) then aces = aces + 1 end'''
match_indent = true
times = 1

# Baron
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Baron' and
                        context.other_card:get_id() == 13 then'''
position = "at"
payload = '''if self.ability.name == 'Baron' and is_rank(context.other_card, {13}) then'''
match_indent = true
times = 1

# Cloud 9
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if v:get_id() == 9 then self.ability.nine_tally = self.ability.nine_tally+1 end'''
position = "at"
payload = '''if is_rank(v, {9}) then self.ability.nine_tally = self.ability.nine_tally+1 end'''
match_indent = true
times = 1

# Mail-In Rebate
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''context.other_card:get_id() == G.GAME.current_round.mail_card.id then'''
position = "at"
payload = '''is_rank(context.other_card, {G.GAME.current_round.mail_card.id}) then'''
match_indent = true
times = 1

# Walkie Talkie
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Walkie Talkie' and
                (context.other_card:get_id() == 10 or context.other_card:get_id() == 4) then'''
position = "at"
payload = '''if self.ability.name == 'Walkie Talkie' and is_rank(context.other_card, {4, 10}) then'''
match_indent = true
times = 1

# Wee Joker
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Wee Joker' and
                    context.other_card:get_id() == 2 and not context.blueprint then'''
position = "at"
payload = '''if self.ability.name == 'Wee Joker' and
                    is_rank(context.other_card, {2}) and not context.blueprint then'''
match_indent = true
times = 1

# The Idol
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'The Idol' and
                    context.other_card:get_id() == G.GAME.current_round.idol_card.id and'''
position = "at"
payload = '''if self.ability.name == 'The Idol' and
                    is_rank(context.other_card, {G.GAME.current_round.idol_card.id}) and'''
match_indent = true
times = 1

# Hit the Road
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''context.other_card:get_id() == 11 and not context.blueprint then'''
position = "at"
payload = '''is_rank(context.other_card, {11}) and not context.blueprint then'''
match_indent = true
times = 1

# Shoot the Moon
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Shoot the Moon' and
                        context.other_card:get_id() == 12 then'''
position = "at"
payload = '''if self.ability.name == 'Shoot the Moon' and
                        is_rank(context.other_card, {12}) then'''
match_indent = true
times = 1

# Triboulet
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if self.ability.name == 'Triboulet' and
                    (context.other_card:get_id() == 12 or context.other_card:get_id() == 13) then'''
position = "at"
payload = '''if self.ability.name == 'Triboulet' and is_rank(context.other_card, {12, 13}) then'''
match_indent = true
times = 1


# Crystal Joker patches
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if v.shattered then'''
position = "at"
payload = '''if v.shattered and SMODS.has_enhancement(v, 'm_glass') then'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''if val.shattered then glass_cards = glass_cards + 1 end'''
position = "at"
payload = '''if val.shattered and SMODS.has_enhancement(val, 'm_glass') then glass_cards = glass_cards + 1 end'''
match_indent = true
times = 1

# Pyrite Joker Unlock
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if card.name == 'Golden Ticket' then'''
position = "before"
payload = '''if card.name == 'j_reverse_fools_gold' then 
    local tally = 0
    for j = 1, #args.cards do
        if SMODS.has_enhancement(args.cards[j], 'm_reverse_pyrite') then
            tally = tally+1
        end
    end
    if tally >= 5 then 
        ret = true
        unlock_card(card)
    end
end
'''
match_indent = true
times = 1